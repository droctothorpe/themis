#!/usr/bin/env ruby

require 'aws-sdk'
require 'tty-prompt'
require 'colorize'
require 'yaml'

@prompt = TTY::Prompt.new
config = YAML.load_file('config.yml')

# Extract regions from conf.yml
regions = []
config.each{ |region| regions << region[0] }

# Select AWS_REGION from options available in conf.yml
region = @prompt.select('Region:') do |menu|
  regions.each{ |region| menu.choice region }
end
ENV[ 'AWS_REGION' ] = region
puts

@as = Aws::AutoScaling::Client.new

def desired_getter( name )
  @as.describe_auto_scaling_groups( auto_scaling_group_names: [ name ], max_records: 1 ).auto_scaling_groups[ 0 ].desired_capacity
end

def desired_setter( name, default )
  pname = name.capitalize
  puts pname.bold.light_green
  original_quantity = desired_getter( name )
  puts "Current #{ pname } quantity: #{ original_quantity }. Default: #{ default }"
  quantity = @prompt.slider( 'Desired Capacity:', max: 30, step: 1, default: desired_getter( name ) )
  @as.set_desired_capacity({ auto_scaling_group_name: name, desired_capacity: quantity, honor_cooldown: false })
  if quantity != original_quantity
    puts "#{ pname } capacity updated."
  end
  puts
end

def print_current( array )
  puts 'Current Quantities'.bold.light_green
  array.each do |number|
    puts "#{ number.capitalize.cyan.ljust( 35 ) } #{ desired_getter( number ) }"
  end
  @prompt.yes?( "Update quantities?" ) ? true : exit!
  puts
end

groups = []
config[ region ].each do |group|
  groups << group[0]
end

print_current( groups )

config[ region ].each do |group|
  default = group[1]
  desired_setter( group[0], default )
end
