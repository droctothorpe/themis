#!/usr/bin/env ruby

require 'aws-sdk'
require 'tty-prompt'
require 'colorize'

@prompt = TTY::Prompt.new( interrupt: :exit, active_color: :bright_green )

def desired_getter( name )
  @as.describe_auto_scaling_groups( auto_scaling_group_names: [ name ], max_records: 1 ).auto_scaling_groups[ 0 ].desired_capacity
end

def max_getter( name )
  @as.describe_auto_scaling_groups( auto_scaling_group_names: [ name ], max_records: 1 ).auto_scaling_groups[ 0 ].max_size
end

def list_groups
  # Construct regions array from regions file
  regions = []
  f = File.open('regions', "r")
  f.each_line { |line| regions << line.strip }
  f.close

  # Select region
  region = @prompt.select( "Select Region:", regions )
  ENV[ 'AWS_REGION' ] = region
  @as = Aws::AutoScaling::Client.new
  data = @as.describe_auto_scaling_groups

  # Describe ASGs in region
  groups = {}
  data.auto_scaling_groups.each do |group|
    groups[ group.auto_scaling_group_name ] = group.desired_capacity
  end
  return groups
end

def select_group
  groups = list_groups
  selection = @prompt.select( "Select ASG:", per_page: 15, filter: true ) do |menu|
    groups.each do |group, quantity|
      menu.choice name: "#{ group }: #{ quantity }", value: group
    end
  end
end

def desired_setter( name )
  puts
  pname = name.capitalize
  puts pname.bold.light_green
  original_quantity = desired_getter( name )
  puts "Current #{ pname } quantity: #{ original_quantity }."
  quantity = @prompt.slider( 'Desired Capacity:', max: max_getter( name ), step: 1, default: desired_getter( name ) )
  @as.set_desired_capacity({ auto_scaling_group_name: name, desired_capacity: quantity, honor_cooldown: false })
  if quantity != original_quantity
    puts "#{ pname } capacity updated."
  end
  puts
end

# Invocation
desired_setter( select_group )
